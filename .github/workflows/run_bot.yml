# ===== GITHUB ACTIONS WORKFLOW =====
name: Free Games Bot Workflow

on:
  schedule:
    # Runs every day at 05:00 UTC (e.g., 08:30 AM Tehran time in summer)
    - cron: '0 5 * * *'
  workflow_dispatch:
    # Allows manual execution from the GitHub Actions UI
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/workflows/run_bot.yml'

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Needed to allow the bot to commit and push changes

    steps:
      - name:  checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: playwright install --with-deps chromium

      - name: Ensure data directories exist
        run: |
          mkdir -p data
          mkdir -p web_data
          mkdir -p cache

      - name: Run Free Games Bot
        env:
          # Secrets must be configured in your repository's settings
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: python -m src.main

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions-bot@github.com"
          
          # Add the generated data files to the staging area.
          # Use --force to ensure they are added even if git thinks they are unchanged.
          git add --force data/games.db web_data/free_games.json
          
          # Check if there are any staged changes to commit.
          # This prevents creating empty commits if the data hasn't changed.
          if git diff --staged --quiet; then
            echo "No data changes to commit. Skipping commit."
          else
            git commit -m "chore(data): Update games database and web data"
            git push
          fi
        env:
          # The GITHUB_TOKEN is automatically provided by GitHub Actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}